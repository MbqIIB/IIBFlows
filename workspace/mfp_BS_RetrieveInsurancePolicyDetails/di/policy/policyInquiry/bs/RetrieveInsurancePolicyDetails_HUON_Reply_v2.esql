BROKER SCHEMA di.policy.policyInquiry.bs


CREATE COMPUTE MODULE RetrieveInsurancePolicyDetails_HUON_Reply_v2_SetUpFlags
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
 
		set OutputRoot = InputRoot;
		
		-- Save Input Message MsgId and Correlid
		SET Environment.HubWorkArea.Origin.MsgId       			= InputRoot.MQMD.MsgId;

		-- Save ReplyToQueue/ReplyToQueueManager
		SET Environment.HubWorkArea.Origin.ReplyToQ     		= InputRoot.MQMD.ReplyToQ;
		SET Environment.HubWorkArea.Origin.ReplyToQMgr  		= InputRoot.MQMD.ReplyToQMgr;
		
		
		declare refInput reference to InputRoot.XMLNSC.esbenv:Envelope.esbenv:Body.retv2:retrieveInsurancePolicyDetailsResp.insurancePolicy.rolesInContract;
		if lastmove(refInput) then
			declare prefix character '';		
			set prefix = substring((refInput.(XMLNSC.Attribute)xsi:type) from 1 for (position(':' in (refInput.(XMLNSC.Attribute)xsi:type))));
			
			if exists(InputRoot.XMLNSC.esbenv:Envelope.esbenv:Body[]) then
				set Environment.HubWorkArea.maxReturnLevel = 'OK';	
	
				--set Environment.HubWorkArea.Distributor    = 'STATE';
				call getXTree(refInput, prefix||'Organisation');
				set Environment.HubWorkArea.Distributor 	= refInput.isIdentifiedBy.partyId;
			end if;
		else
	 		set Environment.HubWorkArea.maxReturnLevel = 'ERROR';	
			
		end if;
		--set Environment.HubWorkArea.maxReturnLevel = 'ERROR';	
		return true;
	end;

	CREATE PROCEDURE getXTree(
			INOUT ref REFERENCE,
			IN attribName CHAR
			) BEGIN
			
			CREATE LASTCHILD OF Environment.getXTree DOMAIN 'XMLNSC' NAME attribName;
			
			SET Environment.getXTree.{attribName} = THE (SELECT ITEM X
				FROM ref.[] AS X
				WHERE X.(XMLNSC.Attribute)xsi:type = attribName);
			MOVE ref TO Environment.getXTree.{attribName};
	END;
	 
END MODULE;


CREATE FILTER MODULE RetrieveInsurancePolicyDetails_HUON_Reply_v2_Check_Reply
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		IF Environment.HubWorkArea.maxReturnLevel = 'OK' THEN 
	   		IF Environment.HubWorkArea.Distributor = 'RACV' THEN
	   			RETURN FALSE;
	   		ELSE
	   			RETURN TRUE;
	   		END IF;			
		ELSE						
		 	RETURN FALSE;
		END IF;	 	
	END;

END MODULE;


CREATE COMPUTE MODULE RetrieveInsurancePolicyDetails_HUON_Reply_v2_Setup_CRODS_Request
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
 
		-- Propagate original message
		CREATE LASTCHILD OF OutputRoot DOMAIN 'MQMD';
		SET OutputRoot.MQMD.MsgId               = InputRoot.MQMD.MsgId;
		SET OutputRoot.MQMD.CorrelId            = InputRoot.MQMD.MsgId;
		--SET OutputRoot.MQMD.MsgId               = Environment.HubWorkArea.Origin.MsgId;
		--SET OutputRoot.MQMD.CorrelId            = Environment.HubWorkArea.Origin.MsgId;

		--Environment.HubWorkArea.Origin.MsgId;	 
		SET OutputRoot.MQMD.Version 		    = MQMD_CURRENT_VERSION;
		SET OutputRoot.MQMD.Format 		        = MQFMT_STRING;
		SET OutputRoot.MQMD.MsgType 		    = MQMT_REPLY; 
		SET OutputRoot.MQMD.Encoding		    = MQENC_NATIVE;	
		SET OutputRoot.MQMD.CodedCharSetId      = MQCCSI_Q_MGR; 
--		SET OutputRoot.MQMD.Expiry              = 30000; 
		SET OutputRoot.MQMD.Expiry              = 600; 
--		SET OutputRoot.MQMD.Persistence         = MQPER_PERSISTENT;

		SET OutputRoot.MQMD.ReplyToQ		    = Environment.HubWorkArea.Origin.ReplyToQ;  
		SET OutputRoot.MQMD.ReplyToQMgr         = Environment.HubWorkArea.Origin.ReplyToQMgr;
		
		-- Setup RFH2 
		SET OutputRoot.MQRFH2                   = NULL;

		-- Copy ESBEnvelope header	
		SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header		= InputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header;

		if (Environment.HubWorkArea.Distributor = 'STATE') then
			SET OutputRoot.XMLNSC.esbenv:Envelope.esbenv:Body.retv2:retrieveInsurancePolicyDetailsResp = InputRoot.XMLNSC.esbenv:Envelope.esbenv:Body.retv2:retrieveInsurancePolicyDetailsResp;
		else		
		-- Copy ESBEnvelope Body   
			SET OutputRoot.XMLNSC.esbenv:Envelope.esbenv:Body.ret:retrieveInsurancePolicyDetailsResp = InputRoot.XMLNSC.esbenv:Envelope.esbenv:Body.ret:retrieveInsurancePolicyDetailsResp;
		end if;			
		PROPAGATE TO TERMINAL  'out1';
		
		

		-- Build and Propagate Request for Retrieving Customer information 
		
		DECLARE refInputBody 		REFERENCE TO InputRoot;
		if (Environment.HubWorkArea.Distributor = 'STATE') then
			move refInputBody to InputRoot.XMLNSC.esbenv:Envelope.esbenv:Body.retv2:retrieveInsurancePolicyDetailsResp.insurancePolicy.rolesInContract;
		else
			move refInputBody to InputRoot.XMLNSC.esbenv:Envelope.esbenv:Body.ret:retrieveInsurancePolicyDetailsResp.insurancePolicy.rolesInContract;
		end if;
		
		WHILE LASTMOVE(refInputBody) DO
		
			IF ((refInputBody.(XMLNSC.Attribute)xsi:type = 'party:Person') OR (refInputBody.(XMLNSC.Attribute)xsi:type = 'party:Organisation'))
			AND (refInputBody.isIdentifiedBy.componentId = 'HUON') THEN 
		
				-- Build MQMD
				CREATE LASTCHILD OF OutputRoot DOMAIN 'MQMD';
				SET OutputRoot.MQMD.MsgId               = Environment.HubWorkArea.Origin.MsgId;	
				SET OutputRoot.MQMD.Version 		    = MQMD_CURRENT_VERSION;
				SET OutputRoot.MQMD.Format 		        = MQFMT_STRING;
				SET OutputRoot.MQMD.MsgType 		    = MQMT_REQUEST; 
				SET OutputRoot.MQMD.Encoding		    = MQENC_NATIVE;	
				SET OutputRoot.MQMD.CodedCharSetId      = MQCCSI_Q_MGR; 
--				SET OutputRoot.MQMD.Expiry              = -1; -- Unlimited
				SET OutputRoot.MQMD.Expiry              = 600;
--				SET OutputRoot.MQMD.Persistence         = MQPER_PERSISTENT;
				SET OutputRoot.MQMD.CorrelId            = Environment.HubWorkArea.Origin.MsgId;	 
				SET OutputRoot.MQMD.ReplyToQ		    = 'EAI.POL.RET_CUSTOMER_DETAILS_BS_V2.REPLY';  
				SET OutputRoot.MQMD.ReplyToQMgr         = Environment.HubWorkArea.Origin.ReplyToQMgr;
		
				-- Setup RFH2 
				SET OutputRoot.MQRFH2                   = NULL;

				-- Copy ESBEnvelope header	
				SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header		= InputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header;

				-- Setup ESBEnvelope body
				CREATE LASTCHILD OF OutputRoot.XMLNSC.esbenv:Envelope.esbenv:Body NAME 'Party';		

				DECLARE ResponseRef 		REFERENCE TO OutputRoot.XMLNSC.esbenv:Envelope.esbenv:Body.Party;
				DECLARE ResponseRef2 		REFERENCE TO OutputRoot.XMLNSC.esbenv:Envelope.esbenv:Body.Party;
				
				CREATE LASTCHILD OF ResponseRef	AS ResponseRef				NAME 'requestId';
				SET ResponseRef.(XMLNSC.Attribute)xsi:type						='identifiers:PartyIdentifier';
				SET ResponseRef.componentId			 							= 'HUON';	
				SET ResponseRef.partyId			 								= refInputBody.isIdentifiedBy.partyId;	

				CREATE LASTCHILD OF ResponseRef2	AS ResponseRef2				NAME 'requestId';
				SET ResponseRef2.(XMLNSC.Attribute)xsi:type						='identifiers:PolicyIdentifier';
				SET ResponseRef2.policyId			 							= Environment.HubWorkArea.policyNumber.policyId;	
				SET ResponseRef2.productCode			 						= Environment.HubWorkArea.policyNumber.productCode;	
		
				PROPAGATE TO TERMINAL  'out';
			
			END IF;
		
			MOVE refInputBody NEXTSIBLING REPEAT NAME;			
		
		END WHILE;   
		
		RETURN FALSE;
	END;


END MODULE;


CREATE COMPUTE MODULE RetrieveInsurancePolicyDetails_HUON_Reply_v2_SetThe_MQMD
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		set OutputRoot = InputRoot;
 		set OutputRoot.MQMD = Environment.RequestState.MQMD;
 		
 		if exists(Environment.RequestState.XMLNSC.esbenv:Envelope[]) then
 			set OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.*[] = Environment.RequestState.XMLNSC.esbenv:Envelope.esbhdr:Header.*[];
 		end if;
	end;
	
END MODULE;


