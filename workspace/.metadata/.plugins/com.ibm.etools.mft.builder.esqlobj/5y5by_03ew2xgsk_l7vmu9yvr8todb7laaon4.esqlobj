/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL ExtractEnvelope();
		RETURN FALSE;
	END;

CREATE PROCEDURE ExtractEnvelope() BEGIN

		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		
		IF EXISTS(InputRoot.MQMD[]) THEN	
			SET Environment.MQMD  							= InputRoot.MQMD;
		END IF;		
		
		DECLARE refOutEnvelope REFERENCE TO OutputRoot.XMLNSC.NS1:Envelope;
		DETACH refOutEnvelope;
			DECLARE I INTEGER 1;
			DECLARE J INTEGER;
			DECLARE ResponseRef REFERENCE TO Environment;

			SET J = CARDINALITY(InputRoot.XMLNSC.NS1:Envelope.NS2:Header.*[]);

			WHILE I <= J DO
				IF CONTAINS(FIELDVALUE(InputRoot.XMLNSC.NS1:Envelope.NS2:Header.*[I]), 'http://') THEN
					--Do Nothing
				ELSE
					IF CARDINALITY(InputRoot.XMLNSC.NS1:Envelope.NS2:Header.*[I].*[]) > 0 THEN
						
						CREATE LASTCHILD OF Environment.Header AS ResponseRef NAMESPACE esbhdr 
						NAME FIELDNAME(InputRoot.XMLNSC.NS1:Envelope.NS2:Header.*[I]);
						SET ResponseRef.(XMLNSC.Attribute)xmlns = esbhdr;
						SET ResponseRef = InputRoot.XMLNSC.NS1:Envelope.NS2:Header.*[I];
					ELSE
						CREATE LASTCHILD OF Environment.Header AS ResponseRef NAMESPACE esbhdr 
						NAME FIELDNAME(InputRoot.XMLNSC.NS1:Envelope.NS2:Header.*[I]) 
						VALUE FIELDVALUE(InputRoot.XMLNSC.NS1:Envelope.NS2:Header.*[I]);
						SET ResponseRef.(XMLNSC.Attribute)xmlns = esbhdr;
					END IF;
				END IF;
				SET I = I + 1;
			END WHILE;

		
		CASE FIELDNAME(InputRoot.XMLNSC.NS1:Envelope.*[<])
			WHEN 'Body' THEN 
				SET OutputRoot.XMLNSC = InputRoot.XMLNSC.NS1:Envelope.NS1:Body;
				PROPAGATE;
			WHEN 'Error' THEN 
				SET OutputRoot.XMLNSC.NS3:Error = InputRoot.XMLNSC.NS1:Envelope.NS3:Error;
				PROPAGATE TO TERMINAL 'out1' DELETE NONE;
			ELSE 	
				THROW USER EXCEPTION VALUES('Invalid ESB Envelope Structure'); 
		END CASE;			
END;
