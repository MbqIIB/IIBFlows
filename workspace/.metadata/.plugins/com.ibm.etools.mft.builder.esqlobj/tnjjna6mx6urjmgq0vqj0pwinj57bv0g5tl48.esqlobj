/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN

		CALL ExceptionListHandler();
		RETURN TRUE;
	
	END;

    	
	CREATE PROCEDURE ExceptionListHandler()
	BEGIN
		
		DECLARE bAddMQMD BOOLEAN TRUE;
		
		SET OutputRoot.Properties = InputRoot.Properties;
		DECLARE refMQMD REFERENCE TO InputRoot.MQMD;
		IF LASTMOVE(refMQMD) THEN
			SET OutputRoot.MQMD = InputRoot.MQMD;
			--SET OutputRoot.MQRFH2.*[] = InputRoot.MQRFH2.*[];
			
			CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQRFH2';
			CREATE LASTCHILD OF OutputRoot.MQRFH2 NAME 'usr';
			DECLARE refUsr REFERENCE TO OutputRoot.MQRFH2.usr;
		
			DECLARE refEnv REFERENCE TO Environment.LoggerSubflow;
			IF LASTMOVE(refEnv) THEN
				MOVE refEnv TO Environment.LoggerSubflow.OverRides;
			END IF;
		
			SET refUsr.UserIdentifier = COALESCE(Environment.LoggerSubflow.OverRides.Correlation,
										InputRoot.HTTPInputHeader."X-Message-Transaction-Correlation-Id");

		ELSE
			IF (bAddMQMD) THEN
				CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQMD';
				DECLARE refMQMD REFERENCE TO OutputRoot.MQMD;
				SET refMQMD.Version = MQMD_CURRENT_VERSION;
				SET refMQMD.Format 	= MQFMT_STRING;
				SET refMQMD.MsgType = MQMT_DATAGRAM;

			END IF;									 
		END IF;

	--
		--                          Environment.LoggerSubflow.OverRides.Correlation;
		
		
		DECLARE sRoot CHARACTER '';
		SET sRoot = ResponseName;
		SET sRoot1 = InputRoot.XMLNSC.*[<];

	   
		CASE Format
			
			WHEN 'HTTP' THEN 
				CALL ExceptionHTTPFormat();
	--		WHEN 'SOAP' THEN
	--	        CALL ExceptionSOAPFormat();
		    WHEN 'CUSTOM' THEN
			    CALL CustomExceptionFormat(sRoot);
			ELSE 	
				CALL ExceptionHTTPFormat();
				
			END CASE;			 
		
		
	END;

	-- Custom Exception Format	
	CREATE PROCEDURE CustomExceptionFormat(IN sRoot CHARACTER)
	BEGIN
		
		DECLARE bIncludeNS BOOLEAN FALSE;
		SET bIncludeNS = IncludeNameSpace;
		
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE chrFile CHAR;
		DECLARE chrFunction CHAR;
		DECLARE chrType CHAR;
		DECLARE chrName CHAR;
		DECLARE chrLabel CHAR;
		DECLARE chrText CHAR;
		DECLARE chrCatalog CHAR;
		DECLARE intSeverity INTEGER;
		DECLARE intNumber INTEGER;
		DECLARE intLine INTEGER;
		
		SET chrLabel = '';
		CALL RetrieveMostInnerChild(InputExceptionList, chrFile, intLine, chrFunction, chrType, 
			chrName, chrLabel, chrText, chrCatalog, intSeverity, intNumber);

		   
		IF (bIncludeNS) THEN
			SET OutputRoot.XMLNSC.esbenv:{sRoot}.(XMLNSC.NamespaceDecl)xmlns:esbenv = esbenv;
			SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header.(XMLNSC.NamespaceDecl)xmlns:esbhdr = esbhdr;
			SET OutputRoot.XMLNSC.esbenv:{sRoot}.esberr:Error.(XMLNSC.NamespaceDecl)xmlns:esberr = esberr;
		END IF;
		
		IF EXISTS(Environment.RequestState.esbenv:Envelope.esbhdr:Header[]) THEN
			IF (bIncludeNS) THEN
				SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header = 
						Environment.RequestState.esbenv:Envelope.esbhdr:Header;
			ELSE
				SET OutputRoot.XMLNSC.{sRoot}.Header = 
						Environment.RequestState.esbenv:Envelope.esbhdr:Header;				
			END IF;
		
		ELSEIF (bIncludeNS) THEN 
			IF EXISTS(Environment.esbhdr:Header[]) THEN
				SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header = Environment.esbhdr:Header;			
			ELSE

				SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header.esbhdr:operationName = MessageFlowLabel;
				IF EXISTS(OutputRoot.MQMD[]) THEN 
 					SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header.esbhdr:messageId = 
 							CAST(InputRoot.MQMD.MsgId AS CHAR);
 					 					
				ELSEIF EXISTS(InputRoot.HTTPInputHeader[]) THEN 
 					SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header.esbhdr:messageId = 
 							CAST(InputRoot.HTTPInputHeader."X-Message-Transaction-Correlation-Id" AS CHAR); 
 					 					
				ELSE
					SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header.esbhdr:messageId = CAST('000000000000000000000000000000000000000000000000' AS CHAR);
					
				END IF;
				SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header.esbhdr:timestamp    = CAST(CURRENT_TIMESTAMP AS CHARACTER);
				SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header.esbhdr:sourceSystem = 'ESB';
				SET OutputRoot.XMLNSC.esbenv:{sRoot}.esbhdr:Header.esbhdr:userId 		= 'IIB';

			END IF;
		ELSE
			IF EXISTS(Environment.esbhdr:Header[]) THEN
				SET OutputRoot.XMLNSC.{sRoot}.Header = Environment.esbhdr:Header;			
			ELSE

				SET OutputRoot.XMLNSC.{sRoot}.Header.operationName = MessageFlowLabel;
				IF EXISTS(OutputRoot.MQMD[]) THEN 
 					SET OutputRoot.XMLNSC.{sRoot}.Header.messageId = 
 							CAST(InputRoot.MQMD.MsgId AS CHAR);
 					 					
				ELSEIF EXISTS(InputRoot.HTTPInputHeader[]) THEN 
 					SET OutputRoot.XMLNSC.{sRoot}.Header.messageId = 
 							CAST(InputRoot.HTTPInputHeader."X-Message-Transaction-Correlation-Id" AS CHAR); 
 					 					
				ELSE
					SET OutputRoot.XMLNSC.{sRoot}.Header.messageId = CAST('000000000000000000000000000000000000000000000000' AS CHAR);
					
				END IF;
				SET OutputRoot.XMLNSC.{sRoot}.Header.timestamp    = CAST(CURRENT_TIMESTAMP AS CHARACTER);
				SET OutputRoot.XMLNSC.{sRoot}.Header.sourceSystem = 'ESB';
				SET OutputRoot.XMLNSC.{sRoot}.Header.userId 		= 'IIB';

			END IF;
			
		END IF;		
		
		IF (bIncludeNS) THEN
			SET OutputRoot.XMLNSC.esbenv:{sRoot}.esberr:Error.esberr:code = intNumber;
			SET OutputRoot.XMLNSC.esbenv:{sRoot}.esberr:Error.esberr:message = chrText;
			SET OutputRoot.XMLNSC.esbenv:{sRoot}.esberr:Error.esberr:severity = SeverityText;
			SET OutputRoot.XMLNSC.esbenv:{sRoot}.esberr:Error.esberr:system = SystemText;
	 	ELSE
			SET OutputRoot.XMLNSC.{sRoot}.Error.code = intNumber;
			SET OutputRoot.XMLNSC.{sRoot}.Error.message = chrText;
			SET OutputRoot.XMLNSC.{sRoot}.Error.severity = SeverityText;
			SET OutputRoot.XMLNSC.{sRoot}.Error.system = SystemText;
		END IF;
	END;

	-- Exception HTTP Format	
	CREATE PROCEDURE ExceptionHTTPFormat()
	BEGIN
		
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE chrFile CHAR;
		DECLARE chrFunction CHAR;
		DECLARE chrType CHAR;
		DECLARE chrName CHAR;
		DECLARE chrLabel CHAR;
		DECLARE chrText CHAR;
		DECLARE chrCatalog CHAR;
		DECLARE intSeverity INTEGER;
		DECLARE intNumber INTEGER;
		DECLARE intLine INTEGER;
		
		SET chrLabel = '';
		CALL RetrieveMostInnerChild(InputExceptionList, chrFile, intLine, chrFunction, chrType, 
			chrName, chrLabel, chrText, chrCatalog, intSeverity, intNumber);

		IF EXISTS(Environment.RequestState.esbenv:Envelope.esbhdr:Header[]) THEN
			SET OutputRoot.XMLNSC.http.header = 
					Environment.RequestState.esbenv:Envelope.esbhdr:Header;
		
		ELSEIF EXISTS(Environment.esbhdr:Header[]) THEN
			SET OutputRoot.XMLNSC.http.header = Environment.esbhdr:Header;
			
		ELSEIF EXISTS(InputRoot.SOAP.Header.esbhdr:Header[]) THEN
			SET OutputRoot.XMLNSC.http.header = InputRoot.SOAP.Header.esbhdr:Header;
		
		ELSE

				SET OutputRoot.XMLNSC.http.header.operationName = MessageFlowLabel;
				IF EXISTS(OutputRoot.MQMD[]) THEN 
 					SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:messageId = 
 							CAST(InputRoot.MQMD.MsgId AS CHAR);
 					 					
				ELSEIF EXISTS(InputRoot.HTTPInputHeader[]) THEN 
 					SET OutputRoot.XMLNSC.http.header.messageId = 
 							CAST(InputRoot.HTTPInputHeader."X-Message-Transaction-Correlation-Id" AS CHAR); 
 					 					
				ELSE
					SET OutputRoot.XMLNSC.http.header.messageId = CAST('000000000000000000000000000000000000000000000000' AS CHAR);
					
				END IF;
				SET OutputRoot.XMLNSC.http.header.timestamp    = CAST(CURRENT_TIMESTAMP AS CHARACTER);
				SET OutputRoot.XMLNSC.http.header.sourceSystem = 'ESB';
				SET OutputRoot.XMLNSC.http.header.userId 		= 'IIB';

		END IF;		
		
		
		SET OutputRoot.XMLNSC.http.error.code = intNumber;
		SET OutputRoot.XMLNSC.http.error.message = chrText;
		SET OutputRoot.XMLNSC.http.error.severity = SeverityText;
		SET OutputRoot.XMLNSC.http.error.system = SystemText;

	END;

	
	-- Exception SOAP Format	
	CREATE PROCEDURE ExceptionSOAPFormat()
	BEGIN
		
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE chrFile CHAR;
		DECLARE chrFunction CHAR;
		DECLARE chrType CHAR;
		DECLARE chrName CHAR;
		DECLARE chrLabel CHAR;
		DECLARE chrText CHAR;
		DECLARE chrCatalog CHAR;
		DECLARE intSeverity INTEGER;
		DECLARE intNumber INTEGER;
		DECLARE intLine INTEGER;
		
		SET chrLabel = '';
		CALL RetrieveMostInnerChild(InputExceptionList, chrFile, intLine, chrFunction, chrType, 
			chrName, chrLabel, chrText, chrCatalog, intSeverity, intNumber);

		SET OutputRoot.XMLNSC.esbenv:Envelope.(XMLNSC.NamespaceDecl)xmlns:esbenv = esbenv;
		SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.(XMLNSC.NamespaceDecl)xmlns:esbhdr = esbhdr;
		SET OutputRoot.XMLNSC.esbenv:Envelope.esberr:Error.(XMLNSC.NamespaceDecl)xmlns:esberr = esberr;
		
		IF EXISTS(Environment.RequestState.esbenv:Envelope.esbhdr:Header[]) THEN
			SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header = 
					Environment.RequestState.esbenv:Envelope.esbhdr:Header;
		
		ELSEIF EXISTS(Environment.esbhdr:Header[]) THEN
			SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header = Environment.esbhdr:Header;
			
		ELSEIF EXISTS(InputRoot.SOAP.Header.esbhdr:Header[]) THEN
			SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header = InputRoot.SOAP.Header.esbhdr:Header;
		
		ELSE

				SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:operationName = MessageFlowLabel;
				IF EXISTS(OutputRoot.MQMD[]) THEN 
 					SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:messageId = 
 							CAST(InputRoot.MQMD.MsgId AS CHAR);
 					 					
				ELSEIF EXISTS(InputRoot.HTTPInputHeader[]) THEN 
 					SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:messageId = 
 							CAST(InputRoot.HTTPInputHeader."X-Message-Transaction-Correlation-Id" AS CHAR); 
 					 					
				ELSE
					SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:messageId = CAST('000000000000000000000000000000000000000000000000' AS CHAR);
					
				END IF;
				SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:timestamp    = CAST(CURRENT_TIMESTAMP AS CHARACTER);
				SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:sourceSystem = 'ESB';
				SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:userId 		= 'IIB';

		END IF;		
		
		
		SET OutputRoot.XMLNSC.esbenv:Envelope.esberr:Error.esberr:code = intNumber;
		SET OutputRoot.XMLNSC.esbenv:Envelope.esberr:Error.esberr:message = chrText;
		SET OutputRoot.XMLNSC.esbenv:Envelope.esberr:Error.esberr:severity = SeverityText;
		SET OutputRoot.XMLNSC.esbenv:Envelope.esberr:Error.esberr:system = SystemText;

	END;
	
	
