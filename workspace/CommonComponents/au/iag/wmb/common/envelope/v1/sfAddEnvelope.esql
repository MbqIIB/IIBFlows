BROKER SCHEMA au.iag.wmb.common.envelope.v1

DECLARE esbenv NAMESPACE 'http://iag.com.au/di/esb/envelope/v1/';
DECLARE esbhdr NAMESPACE 'http://iag.com.au/di/esb/header/v1/';
DECLARE esberr NAMESPACE 'http://iag.com.au/di/esb/error/v1/';

CREATE COMPUTE MODULE sfAddEnvelope_Add_Envelope
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL AddEnvelope();
		RETURN TRUE;
	END;
	
	CREATE PROCEDURE AddEnvelope() BEGIN

		IF NOT EXISTS(InputRoot.MQMD[]) THEN
			CALL ConstructMQMD();
		END IF;

		IF EXISTS(Environment.Header[]) THEN
			DECLARE I INTEGER 1;
			DECLARE J INTEGER;
			DECLARE ResponseRef REFERENCE TO OutputRoot;

			SET J = CARDINALITY(Environment.Header.*[]);

			WHILE I <= J DO
				IF CONTAINS(FIELDVALUE(Environment.Header.*[I]), 'http://') THEN
					--Do Nothing
				ELSE
					IF CARDINALITY(Environment.Header.*[I].*[]) > 0 THEN
						
						CREATE LASTCHILD OF OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header AS ResponseRef NAMESPACE esbhdr 
						NAME FIELDNAME(Environment.Header.*[I]);
						SET ResponseRef.(XMLNSC.Attribute)xmlns = esbhdr;
						SET ResponseRef = Environment.Header.*[I];
					ELSE
						CREATE LASTCHILD OF OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header AS ResponseRef NAMESPACE esbhdr 
						NAME FIELDNAME(Environment.Header.*[I]) 
						VALUE FIELDVALUE(Environment.Header.*[I]);
						SET ResponseRef.(XMLNSC.Attribute)xmlns = esbhdr;
					END IF;
				END IF;
				SET I = I + 1;
			END WHILE;
			
			
			

		ELSEIF EXISTS(InputLocalEnvironment.SOAP.Envelope.InRequest[]) THEN
			SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header = InputLocalEnvironment.SOAP.Envelope.InRequest.*[<].SOAP.Header.esbhdr:Header;		
      		SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:extensionList.esbhdr:extension.esbhdr:name  = 'SOAPReplyIdentifier';
      		SET OutputRoot.XMLNSC.esbenv:Envelope.esbhdr:Header.esbhdr:extensionList.esbhdr:extension.esbhdr:value = 
      		CAST(InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier AS BLOB);

		ELSE 
			THROW USER EXCEPTION VALUES('ESB Header Not Found'); 
		END IF;
		
		CASE FIELDNAME(InputRoot.XMLNSC.*[>])
			
			WHEN 'Error' THEN 
				SET OutputRoot.XMLNSC.esbenv:Envelope.esberr:Error 							= InputRoot.XMLNSC.esberr:Error;
			ELSE 	
				SET OutputRoot.XMLNSC.esbenv:Envelope.esbenv:Body 							= InputRoot.XMLNSC;
			END CASE;			 
		
		SET Environment.HTTPInputHeader		  			  	      							= InputRoot.HTTPInputHeader;	
	END; 	

	CREATE PROCEDURE ConstructMQMD() BEGIN
		CREATE LASTCHILD OF OutputRoot DOMAIN 'MQMD';

--		IF NOT EXISTS(Environment.MQMD[]) THEN			
--			SET OutputRoot.MQMD.MsgId           				= CAST(InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier AS BLOB);
--		END IF;	
		
			SET OutputRoot.MQMD.Version 						= MQMD_CURRENT_VERSION;
			SET OutputRoot.MQMD.Format 							= MQFMT_STRING;
			SET OutputRoot.MQMD.MsgType 						= MQMT_REQUEST;
			
		IF EXISTS(Environment.MQMD[]) THEN			
			SET OutputRoot.MQMD									= Environment.MQMD;						
		ELSE	
			IF 	EXISTS(InputLocalEnvironment.SOAP.Envelope.InRequest.*[<].SOAP.Header.esbhdr:Header.esbhdr:messageId[]) THEN 
				SET OutputRoot.MQMD.CorrelId					= CAST(InputLocalEnvironment.SOAP.Envelope.InRequest.*[<].SOAP.Header.esbhdr:Header.esbhdr:messageId AS BLOB);
			ELSE 
				SET OutputRoot.MQMD.CorrelId					= CAST(InputRoot.HTTPInputHeader."X-Message-Transaction-Correlation-Id" AS BLOB);
			END IF;
		END IF;				
	END;  
	
END MODULE;
